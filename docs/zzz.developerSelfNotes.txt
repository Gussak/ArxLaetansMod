// tests, tips, help, ideas, todos, etc, self notes.. (you may ignore this)

rune all
addxp 70000 //to help on dev testing things lvl 8
// easy grep ex.: clear;LC_ALL=C egrep 'torch' --include="*.asl" --include="*.ASL" -iRnIa *

collision <enable> //for chairs other things that could be used to step over?
collision true

inventory addmulti magic/hologram/hologram 50 inventory addmulti weapons/bone_weap/bone_weap 10 inventory addmulti provisions/torch/torch 20 inventory addmulti magic/potion2begreen/potion2begreen 10 inventory addmulti magic/potion2beorange/potion2beorange 10 inventory addmulti magic/potion2beblue/potion2beblue 10 inventory addmulti magic/potion2bepurple/potion2bepurple 10 inventory addmulti magic/potion2bewhite/potion2bewhite 10 inventory addmulti magic/potion_green/potion_green 10 inventory addmulti magic/potion_mana/potion_mana 10 inventory addmulti magic/potion_invisible/potion_invisible 10 inventory addmulti magic/potion_life/potion_life 10 inventory addmulti magic/potion_purple/potion_purple 10 inventory add provisions/backpack/backpack inventory addmulti provisions/bottle_water/bottle_water 10 inventory addmulti provisions/bottle_wine/bottle_wine 10 inventory addmulti provisions/bottle_blood/bottle_blood 10 

inventory addmulti magic/hologram/hologram 50  
inventory addmulti weapons/bone_weap/bone_weap 10 
inventory addmulti provisions/torch/torch 20 
inventory addmulti magic/potion2begreen/potion2begreen 10 
inventory addmulti magic/potion2beorange/potion2beorange 10 
inventory addmulti magic/potion2beblue/potion2beblue 10 
inventory addmulti magic/potion2bepurple/potion2bepurple 10 
inventory addmulti magic/potion2bewhite/potion2bewhite 10 
inventory addmulti magic/potion_green/potion_green 10 
inventory addmulti magic/potion_mana/potion_mana 10 
inventory addmulti magic/potion_invisible/potion_invisible 10 
inventory addmulti magic/potion_life/potion_life 10 
inventory addmulti magic/potion_purple/potion_purple 10 
inventory add provisions/backpack/backpack 
inventory addmulti provisions/bottle_water/bottle_water 10 
inventory addmulti provisions/bottle_wine/bottle_wine 10 
inventory addmulti provisions/bottle_blood/bottle_blood 10 

addxp 7000
inventory add magic/hologram/hologram
inventory addmulti magic/hologram/hologram 50
spawn npc "goblin_base\\goblin_base" player

// search the src for clues of what set the player as enemy to let it happen when activating the hologram (to happen from the hologram onInventoryUse event)

// thrown items could have these? until they hit once, then disable collision. Glass items could break also and apply the contents effects?
collision true
damager -e 5 
 -e: Metal damage
 -w: Wood damage
 -s: Stone damage
 -u: Push the entity

setangular <enable> //shading test

mul <variable> <value*> //multiply var

when trap begins:
  settrap <technical*> //technical is the skill used to detect trap above that value
  settrap 10

rune all

//to help on dev testing things lvl 8
addxp 70000
inventory playeraddmulti magic/hologram/hologram 50
inventory playeraddmulti weapons/bone_weap/bone_weap 50

inventory playeradd magic/hologram/hologram

inventory playeraddmulti provisions/torch/torch 20
inventory playeradd movable/skull/skull
inventory playeradd weapons/bone_weap/bone_weap
inventory playeraddmulti weapons/bone_weap/bone_weap 50

inventory playeradd quest_item/blood/blood
inventory playeradd quest_item/sedative_dose/sedative_dose

#potion2begreen potion2beorange potion2beblue potion2bepurple potion2bewhite
inventory playeradd magic/potion2begreen/potion2begreen
inventory playeradd magic/potion2beorange/potion2beorange
inventory playeradd magic/potion2beblue/potion2beblue
inventory playeradd magic/potion2bepurple/potion2bepurple
inventory playeradd magic/potion2bewhite/potion2bewhite

inventory playeradd magic/potion2berealcure/potion2berealcure
inventory playeradd magic/potion2berealcurefull/potion2berealcurefull

inventory playeradd provisions/bottle_water/bottle_water
inventory playeradd provisions/bottle_wine/bottle_wine

inventory playeradd provisions/bottle_blood/bottle_blood
inventory playeradd magic/potion_green/potion_green

inventory playeraddmulti magic/potion_mana/potion_mana 20
inventory playeradd magic/potion_mana/potion_mana
inventory playeradd magic/potion_invisible/potion_invisible

inventory playeradd magic/potion_life/potion_life
inventory playeradd magic/potion_purple/potion_purple

inventory playeradd provisions/backpack/backpack

inventory playeradd movable/broken_bottle/broken_bottle



# find all icon sizes
FUNC() { identify "$1" |sed -r -e 's@.*/([^/]*) ([0-9]*x[0-9]*) .*@ \2 \1@' |tee -a iconSizes.txt; }; export -f FUNC; find -iname "*\[icon\]*" -exec bash -c "FUNC '{}'" \;


================================ TODO 

raycast placing a hand (decal) in walls and floors (max dist 300), useful to use with the total darkness mod and still know the limits of the walls

add stamina.

hold jump to jump farer. spends full bar of stamina at most. adds at most 3.0 hunger.

/*
LODS:
 P,0:!perfect, original
 H,1: perceptually High, little loss, still nearby
 M,2:!perceptually Medium, some loss, a bit far, but still looks good!
 L,3: perceptually Low, lossy, far, but carefully prepared to keep contour at least
 B,4: perceptually bad, very lossy, very far, visually messed up but still resembles the original
 F,5:!flat shape mesh that "looks" to the active camera, square, 2 triangles, could have a front, left, right, back, top and bottom flat textures. these textures could also be the icons in the inventory.
*/
AncientDevice.Hologram.ftl //original
AncientDevice.Hologram[High].ftl
AncientDevice.Hologram[Medium].ftl
AncientDevice.Hologram[Low].ftl
AncientDevice.Hologram[Bad].ftl
AncientDevice.Hologram[Flat].ftl
AncientDevice.Hologram[H].ftl
AncientDevice.Hologram[M].ftl
AncientDevice.Hologram[L].ftl
AncientDevice.Hologram[B].ftl
AncientDevice.Hologram[F].ftl
AncientDevice.Hologram[1].ftl
AncientDevice.Hologram[2].ftl
AncientDevice.Hologram[3].ftl
AncientDevice.Hologram[4].ftl
AncientDevice.Hologram[5].ftl
AncientDevice.Hologram[LOD1].ftl
AncientDevice.Hologram[LOD2].ftl
AncientDevice.Hologram[LOD3].ftl
AncientDevice.Hologram[LOD4].ftl
AncientDevice.Hologram[LOD5].ftl

// SetCommand replace string var value matching  regex with string value
// can be used to remove an item of an array stored in a string
Set -x £work ".*regexMatch.*" "value"

/**
 * Arrays: multidimensional
 * It is recommended that the name contains hints about the dimension and key option, for easy coding, as suffix like 2D 3D 1D 12D ex.: €Locations3D, or K2D K13D €LocationsK13D if using keyId
 * index can be
 *   first=0=prepend or 
 *   append(afterLast) or
 * <values...> depend on the dimension
 * [-rw] these params come before others ex.: Array -rws entIdR entIdW €fooListK2D 2 someKeyIdA §a1 §a2
 *  -sw <entWriteTo>  the array is written to entWriteTo
 *  -sr <entReadFrom> the values are read from entReadFrom but only if they are local variables
 *  -gr <entReadFrom> the array is read from entReadFrom
 *  -gw <entWriteTo>  the values are written to entWriteTo and must be local variables (error otherwise)
 * vars fixed dimension: €localVarIndexedArray ¥globalVarIndexedArray
 * vars variable dimension per KeyID: €¶localVarKeyValue ¥¶globalVarKeyValue
 * basic: Array [-gsd] <€localVar|¥globalVar> <dimension> <index|key> <values...> 
 * negative index: counts from last: -1 is just before last or at last index
 * targeting: Array [-gsdrw] <entWriteTo> <entReadFrom> <€localVar|¥globalVar> <dimension> <index|key> <values...> 
 */
/* CPP coding:
 * : each value in the vector is of the var multitype struct that has string,int,float
 * : the variable type assigned can be auto detected in this order: string[a-z_] float[0-9-.] int[0-9-]
 * : indexed array: for(i=0;i<max;i+=dimension) //simple vector with fixed dimension
 * : key value array: map.find(key)->second[index] //map<key,vector> each key can have a dimension
 */
/** OPTIONS (Flags)
 * [-sgdilc] exclusive set/get/delete/insert/list/copy
 * [-i] ATTENTION! only accepts simple indexed arrays (w/o keyIds)
 * tip: each key in the map array can contain a specific vector dimension, letting you create data structures.
 * */
/** set */
Array -s <€var|¥var> <dimension> <¶?stringKeyId|index> <values...> 
ex.: Array -s €¶akList3D 3 someKeyIdA 11 21 31 // array key
ex.: Array -s €aiList3D 3 7 11 21 31 // array index
Array -s <€¶var|¥¶var> <€¶varFrom|¥¶varFrom> <keyFilterRegex:.*|all>
ex.: Array -s €¶akList3D €¶varFrom all // overwrite values of matching keys (erasing existing first to match the copied valueDimension) or create new key,valueDimension
/** get */
Array -g <€var|¥var> <dimension> <¶?stringKeyId|index> <vars...> 
ex.: Array -g €¶akList2D 2 someKeyIdB §b1 §b2
ex.: // this below is the same array where each key as a dimension (a data structure)
  Array -g €¶akListMultiDimensions 2 someKey2D §i1 £s2
  Array -g €¶akListMultiDimensions 3 someKey3D §i1 §i2 §i3
  Array -g €¶akListMultiDimensions 4 someKey4D £s1 §i2 @f3 §i4
ex.: Array -g €aiList4D 4 7 §c1 §c2 §c3 §c4
ex.: Array -g €aiList5D 4 -1 §c1 §c2 §c3 §c4 §c5
/** delete */
Array -d <€¶var|¥¶var> <stringKeyId|.*|all> //clears, can be regex to match keyId
ex.: Array -d €¶fooListK2D someKeyIdB
ex.: Array -d €¶fooListK2D "rat_base_.*"
/** * [-d] delete index * existing after will be shifted to the left */
Array -d <€var|¥var> <index|n,n1-n2|*|all> //can be specific indexes separated by ',' or range (inclusive n1, inclusive n2)
ex.: Array -d €posList3D 7
ex.: Array -d €posList3D -3
/** * [-i] insert at index * existing at index and after will be shifted to the right. ONLY WORKS with simple array that have no keyId! */
Array -i <€var|¥var> <dimension> <index|append> <values...> 
ex.: Array -i €posList3D 3 7 10 20 30
ex.: Array -i €posList3D 3 append 10 20 30 // appends after last
Array -i <€var|¥var> <dimension> <index|append> <€var|¥var> <n,n1-n2|*|all>
ex.: Array -i €posList3D 3 7 €posListToInsert3D 6,32,9-1 // insert the filtered array €posListToInsert3D at index 7 of 3 dimensional list €posList3D
/** * [-l] sorted list of keys */
Array -l <€¶var|¥¶var> <£var|€var|¥var> <.*|all>
ex.: Array -l €¶akList3D £listOfKeyIDs "goblin_[0-9]*" // creates a list separated by " "
ex.: Array -l €¶akList3D €aiList .* // creates 1D indexed array of strings
Array -l <€var|¥var> <dimension> <Columns:n,n1-n2|*|all> <£var|€var|¥var> // the column at each entry in the array
ex.: Array -l €akList3D 3 1,0,2-0 £listOfKeyIDs "goblin_[0-9]*" // creates a list separated by " "
/** * [-c] make a copy */
Array -c <€var|¥var> <€var|¥var> <n,n1-n2|*|all>
ex.: Array -c €aiList3D €aiCopyTo "6,1,3-9" //accepts anything in any order
Array -c <€¶var|¥¶var> <€¶var|¥¶var> <.*|all>
ex.: Array -c €¶akList3D €¶akCopyTo all



================================ CPP quick helpers, delete before pull request

#include <iostream>
#define MYDBG(x) std::cout << "_MyDbg_: " << x << "\n" //replace with LogDebug later
MYDBG(anyVar<<","<<anything<<anythinElse);

if(textvar == "some condition"){platform::runUserCommand("yad");} //ex of simple force a conditional stop in case of too much difficulty with any debugger, then hit stop on the debugger

================================ show missing PR_ from readme.md
(git branch -r && cat "../ArxLaetansMod.github/README.md" |sed 's@.*@&(atMD)@') |grep -o "/PR_.*" |sort -u

================================ PR_... comments
PR_CmtAtOtherEnt_Behavior_Setmovemode_Settarget
Let other entities be set by these commands: bahavior, setmovemode, settarget

PR_UsemeshOtherEnt
command 'usemesh' now accepts other entityID to apply it

PR_LifeOfOtherEnt
^live_<entityID> can get the life value of any entity that have it

PR_HoverFar
^hover_<dist> returns any entity at most at specified distance.

PR_DropItems
New command: dropitem
Can drop one or all items of any entity inventory where it is or in front of the player.

PR_WeaponCmdOtherEnt
weapon command accepts a entity to apply it now

https://github.com/Gussak/ArxLibertatis/tree/PR_Interpolate2
Interpolate command
Interpolate an entity near a target by percent or absolute distance

https://github.com/Gussak/ArxLibertatis/tree/PR_DebugLineColumnInfo2
Debug Line and Column Info
Terminal log will show line and column where the problem happened.


https://github.com/Gussak/ArxLibertatis/tree/PR_DistanceToLocation2
Distance variable now can use an absolute location as target
ex.: ^dist_{8000.25,7800.44,8500.32}

https://github.com/Gussak/ArxLibertatis/tree/PR_LogicalOperators2  
Logical Operators for "if" command  
and(... && ... && ...) //only accepts '&&' or ','  
or(... || ... || ...) //only accepts '||' or ','  
!and(... && ... && ...)  
!or(... || ... || ...)  
and nesting: if(and(... && !or(... || ... || and(... , ... , ...)) && ...))  
where '...' are the existing comparisons that use == != >= <= > <  

https://github.com/Gussak/ArxLibertatis/tree/PR_FormatString3
Format expanded variables thru printf syntax

https://github.com/Gussak/ArxLibertatis/tree/PR_DegreesVariables2
Added ^degrees... variables
only degrees, also for pitch and roll now

https://github.com/Gussak/ArxLibertatis/tree/PR_DistanceToLocation
Distance variable now can use an absolute location as target
ex.: ^dist_{8000.25,7800.44,8500.32}


================================ DONE TESTING

timer GoTo FUNCaimPlayerCastLightning //test
>>>FUNCaimPlayerCastLightning
  ifvisible <entity>
  ifvisible PLAYER { //use for fireball too?
    // set auto rotate angle speed to 0 after bkp it
    forceangle <yaw*>
    ^angleto_<entity>
    forceangle ^angleto_PLAYER
    cast lightning
    // retore auto rotate angle speed
  }
ACCEPT

// this may help on hologram visualization. NO it has no alpha..
worldfade out <duration*> <r*> <g*> <b*> //milis 0.0-1.0
worldfade in <duration*>

attractor <entity> <power*> <radius*>
attractor SELF 10 300 //hologram blackhole test

============================== CPP DBG bkp

//DONE.LogDebug: MYDBG("getLife()@Script.cpp: player.Full_life="<<player.Full_life<<"," <<"player.m_lifeMaxWithoutMods="<<player.m_lifeMaxWithoutMods<<"," <<"player.lifePool.max="<<player.lifePool.max<<"," <<"cType="<<cType<<"," <<"ent="<<ent<<"," <<"name="<<name<<"," <<"offset="<<offset<<"," <<"entOverride="<<entOverride<<"," );

//DONE.LogDebug: MYDBG("INTERPOLATE(): strEntityToMove="<<strEntityToMove <<",strTarget="<<strTarget <<",entToMoveId="<<entToMove->idString() <<",entTargetId="<<(entTarget?entTarget->idString():"null") <<",posTarget="<< vec3fToStr(posTarget)<<",posFrom="<< vec3fToStr(posFrom)<<",fDistMax="<<fDistMax<<",posRequested="<< vec3fToStr(posRequested)<<",bLimitDist="<< bLimitDist<<",bAbsPosFrom="<<bAbsPosFrom <<",bPosTarget="<< bPosTarget<<",fContextDist="<< fContextDist);

//DONE.LogDebug: MYDBG("DEGREES():(name="<<name<<",xyz="<<xyz<<",deg="<<degrees<<",fixedDeg="<<(*fcontent)<<",pitch="<<entity->angle.getPitch()<<",yaw="<<entity->angle.getYaw()<<",roll="<<entity->angle.getRoll()<<",Ppitch="<<player.angle.getPitch()<<",Pyaw="<<player.angle.getYaw()<<",Proll="<<player.angle.getRoll()<<",Cpitch="<<context.getEntity()->angle.getPitch()<<",Cyaw="<<context.getEntity()->angle.getYaw()<<",Croll="<<context.getEntity()->angle.getRoll()<<")"); //<<",angle="<<entity->angle


#ifdef ARX_DEBUG
#pragma GCC push_options
#pragma GCC optimize ("O0") //required to let the breakpoints work properly
#endif
//code to place breakpoints
#ifdef ARX_DEBUG
#pragma GCC pop_options
#endif

======================== etc

class ShowCallStackCommand : public Command {
	
public:
	
	ShowCallStackCommand() : Command("showcallstack", AnyEntity) { }
	
	Result execute(Context & context) override {
		
		DebugScript("");
		
		LogInfo << "GoTo and GoSub call stack for " << context.getEntity()->idString() << ":\n"
		        << PrintCallStack(context.getEntity());
		for(std::string_view func : m_stackId) todoa
		
		return Success;
	}
	
};

// create a simple and easy patch file ex.:
git diff hologram.asl hologram.patchedForTests.asl >hologram.asl.patch

some special chars for tests: £§«» ¢¥©®¬±¯ª°º¹²³µ¶·Þß€¥×þð¶œç¿¡ÞÐøØÆŒ  §·tst §¯tst §°tst §¹tst §¹tst §«tst §«tst \xBB  
€¶aList
¥¬aList
€¯aList
¥ªaList
¥°aList





///////////////////////////////// OLD SKETCH DELETE BELOW HERE //////////////////////////


///** * set at index */
//Array -s <€localVarDimension> <index> <values...> 
//ex.: Array -s €posList3D 7 11 21 31

///** get from index into vars */
//Array -g <€localVarDimension> <index> <vars...> 
//ex.: Array -g €posList3D 7 §posX §posY §posZ

///** get by key into vars */
//Array -g <€localVarDimension> <index> <vars...> 
//ex.: Array -ks €posList4D stringKeyId §posX §posY §posZ
//ex.: Array -kg €posList4D stringKeyId §posX §posY §posZ

//...

//Array [-rw] <dimension> <€localvar> // -r entReadFrom, -w entWriteTo, use the dimension on the var name

//Array -i <dimension> <€localvar> <index> <values...> // insert at index (index can be first=0=prepend or append=-1, a negative value inserts from last). exinsting will be shifted to the right. values... depend on the dimension
//ex.: Array -i 3 €posList3D 7 10 20 30

//Array -d <dimension> <€localvar> <index> // delete index. exinsting will be shifted to the left.
//ex.: Array -d 3 €posList3D 7

//Array -d <dimension> <€localvar> <index> // delete index. exinsting will be shifted to the left.
